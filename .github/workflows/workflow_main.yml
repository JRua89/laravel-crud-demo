name: Laravel CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: laravel
          MYSQL_USER: testuser
          MYSQL_PASSWORD: testpassword
        ports:
          - 3306:3306

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          extensions: mbstring, pdo, mysql
          tools: composer, phpunit

      - name: Install Dependencies
        run: composer install --no-progress --no-suggest --prefer-dist

      - name: Create .env file
        run: |
          cp .env.example .env
          echo "DB_CONNECTION=mysql" >> .env
          echo "DB_HOST=127.0.0.1" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_DATABASE=laravel" >> .env
          echo "DB_USERNAME=testuser" >> .env
          echo "DB_PASSWORD=testpassword" >> .env

      - name: Generate application key
        run: php artisan key:generate

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Run Tests
        run: php artisan test

      - name: Drop Existing Database (if exists)
        run: php artisan db:wipe --force

      - name: Drop `password_resets` Table
        run: |
             php artisan db:table --drop password_resets

      - name: Run Migrations
        run: php artisan migrate --force
        
      - name: Run Migrations (Ignore DB Connections)
        run: php artisan migrate:fresh --force --database=testing
        
      - name: Drop `password_resets` Table
        run: php artisan schema:drop password_resets

      - name: Run Migrations
        run: php artisan migrate --force

      - name: Set up .env file
        run: |
          cp .env.example .env
          php artisan key:generate

      - name: Set up database
        run: |
          php artisan migrate --force

      - name: Run tests with authentication
        run: |
          # Make sure authentication is set up if necessary
          php artisan migrate --force
          php artisan db:seed --force
          php artisan config:clear
          php artisan cache:clear

          # Set a testing user
          php artisan tinker --execute "\App\Models\User::factory()->create(['email' => 'testuser@example.com']);"

          # Run the tests
          php artisan test --env=testing

      - name: Upload test results to GitHub
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: storage/logs



